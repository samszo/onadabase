<?xml version="1.0" encoding="utf-8"?>
<mx:Tree xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%" showRoot="true" 
	click="changeEvt(event);"
	dataProvider="{ac}"
	>
	<mx:Script>
        <![CDATA[
        	import mx.controls.Image;
        	import mx.collections.ArrayCollection;
        	import mx.containers.HBox;
            import mx.controls.Alert;
            import mx.rpc.http.HTTPService;
            import mx.rpc.events.ResultEvent;
            import mx.rpc.events.FaultEvent;
	       	import mx.managers.PopUpManager;
			import mx.managers.CursorManager;
		    import compo.hbLieuDiag;
           
            private var service:HTTPService;
            private var arrTypeDoc:Array;
            private var titreListeDiag:String;

			public function setStyleListeDiag():void{
				switch(arrTypeDoc[0]) {
		            case "0":
		                this.setStyle("borderColor","green");
		                this.setStyle("backgroundColor","green");
		                break;
		            case "1":
		                this.setStyle("borderColor","yellow");
		                this.setStyle("backgroundColor","yellow");
		                break;
		            case "2":
		                this.setStyle("borderColor","#ffa200");
		                this.setStyle("backgroundColor","#ffa200");
		                break;
		            case "3":
		                this.setStyle("borderColor","red");
		                this.setStyle("backgroundColor","red");
		                break;
		        } 
		        this.title += " "+titreListeDiag;
			}	
			
            public function useHttpService(srvUrl:String,parameters:Object,titreSelect:String):void {
                //conserve le type de doc pour le style
                arrTypeDoc = parameters.idDoc.split("_");
                titreListeDiag = titreSelect; 
				//exécute la requête
                service = new HTTPService();
                service.url = srvUrl;
                //service.method = "POST";
                service.addEventListener("result", httpResult);
                service.addEventListener("fault", httpFault);
                service.send(parameters);
            }

            public function httpResult(event:ResultEvent):void {
                if(event.result!=""){
	                var rsListe:Object = event.result;
                }
                //boucle sur les critères
		        for each (var rLieu:Object in rsListe.vbox.lieu)
		        {
        	        var hbLC:hbLieuDiag = new hbLieuDiag();
        	        hbLC.rsLieu=rLieu;
   					mainCtrl.addChild(hbLC);

		        }
				CursorManager.removeBusyCursor();
            
            }

            public function httpFault(event:FaultEvent):void {
				CursorManager.removeBusyCursor();
                var faultstring:String = event.fault.faultString;
                Alert.show(faultstring);
            }

	         private function changeEvt(event:Event):void {
	            var theData:Object=event.currentTarget.selectedItem.cat;
	            if (theData) {
	               trace(" Data: " + theData.titre);
	               this.parentApplication.createMarkerGrille(theData.id);
	            }
	         }

        ]]>
	</mx:Script>
	

</mx:Tree>	